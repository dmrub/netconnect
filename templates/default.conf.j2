map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

map $http_x_forwarded_proto $real_scheme {
  default $scheme;
  https https;
  http http;
}

server {
  listen {{ nginx_port }};

  real_ip_header     X-Forwarded-For;
  real_ip_recursive  on;

  location / {
    proxy_pass http://127.0.0.1:{{controller_port}}/;

    # Websocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # proxy_redirect http://$http_host/ http://$http_host/$1/;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $real_scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $real_scheme;
    proxy_set_header X-Script-Name        $http_x_script_name;
    proxy_set_header X-Forwarded-Prefix   $http_x_forwarded_prefix;
    proxy_set_header X-Forwarded-Uri      $request_uri;
  }

  {% for rport in registered_ports_by_port.values() %}

  location ~ ^/proxy/{{rport.name}}$ {
    rewrite ^(.*[^/])$ $real_scheme://${http_host}${http_x_forwarded_prefix}$1/ permanent;
  }

  location ~ ^/proxy/{{rport.name}}/(.*)$ {

    proxy_pass http://127.0.0.1:{{rport.port}}/$1$is_args$args;

    # Websocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # proxy_redirect http://$http_host/ http://$http_host/proxy/$1/;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $real_scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto      $real_scheme;
    proxy_set_header X-Script-Name        $http_x_script_name/proxy/{{rport.name}};
    proxy_set_header X-Forwarded-Prefix   $http_x_forwarded_prefix/proxy/{{rport.name}};
    proxy_set_header X-Forwarded-Uri      $http_x_forwarded_uri$request_uri;
  }
  {% endfor %}

}
